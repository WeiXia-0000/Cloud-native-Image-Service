AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cloud-native Image Service (Phase 0 init).

Globals:
  Function:
    Runtime: python3.11
    Timeout: 15
    MemorySize: 256
    Tracing: Active
    Environment:
      Variables:
        TABLE: !Ref MetaTable
        DST_BUCKET: !Ref ProcessedBucket
        REDIS_HOST: ""
        CF_DOMAIN: ""

Parameters:
  SourceBucketName:
    Type: String
    Default: img-source-bucket-demo
  ProcessedBucketName:
    Type: String
    Default: img-processed-bucket-demo

Resources:
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName

  ProcessedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ProcessedBucketName
      CorsConfiguration:
        CorsRules:
          - AllowedMethods: [GET, HEAD]
            AllowedOrigins: ['*']
            AllowedHeaders: ['*']

  MetaTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-meta"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  ProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-processor"
      CodeUri: serverless/lambda/
      Handler: processor.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
        - S3WritePolicy:
            BucketName: !Ref ProcessedBucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref MetaTable
      Events:
        S3ImageUpload:
          Type: S3
          Properties:
            Bucket: !Ref SourceBucket
            Events: s3:ObjectCreated:*

  ReadFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-reader"
      CodeUri: serverless/lambda/
      Handler: reader.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref MetaTable
      Events:
        ApiHealth:
          Type: Api
          Properties:
            Path: /health
            Method: GET
        ApiGetMeta:
          Type: Api
          Properties:
            Path: /meta/{key+}
            Method: GET
        ApiGetImg:
          Type: Api
          Properties:
            Path: /img/{key+}
            Method: GET

Outputs:
  ApiUrl:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  SourceBucket:
    Value: !Ref SourceBucketName
  ProcessedBucket:
    Value: !Ref ProcessedBucketName
  TableName:
    Value: !Ref MetaTable